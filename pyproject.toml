[tool.poetry]
name = "django-render-static"
version = "2.2.1"
description = "Use Django's template engine to render static files at deployment or package time. Includes transpilers for extending Django's url reversal and enums to JavaScript."
authors = ["Brian Kohan <bckohan@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/bckohan/django-render-static"
homepage = "https://django-render-static.readthedocs.io"
keywords = ["django", "static", "templates", "javascript", "url", "reverse", "defines", "transpiler", "transpile", "enum"]
classifiers = [
    "Environment :: Console",
    "Framework :: Django",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

packages = [
    { include = "render_static" }
]
exclude = ["render_static/tests"]

# [tool.poetry.scripts]
# django-renderstatic = 'render_static.console:main'

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
Django = ">=3.2,<6.0"
importlib-resources = { version = ">=1.3.0", python = "<3.9" }
Jinja2 = { version = ">=2.9,<4.0", optional = true }
PyYAML = { version = ">=5.1,<7.0", optional = true }
django-typer = "^1.0.0"

[tool.poetry.group.dev.dependencies]
django-enum = "^1.1.0"
enum-properties = "^1.1.1"
pytest = "^7.0"
pytest-django = "^4.7.0"
Sphinx = "^7.0.0"
sphinx-js = [
    { version = "<3.0", markers = "python_version < '3.8'" },
    { version = "^3.0", markers = "python_version >= '3.8'" },
]
sphinx-rtd-theme = "^2.0.0"
mypy = "^1.8"
isort = "^5.13.0"
doc8 = "^1.1.0"
pytest-cov = "^4.1.0"
pylint = "^3.0.0"
deepdiff = "^6.7.0"
safety = "^2.3.0"
readme-renderer = {extras = ["md"], version = "^43.0"}
types-PyYAML = "^6.0"
coverage = "^7.3.0"
importlib-metadata = "^7.0.0"
selenium = "^4.16.0"
python-dateutil = "^2.8.2"
ipdb = "^0.13.13"
black = "^23.12.0"
aiohttp = "^3.9.1"
sphinxcontrib-typer = "^0.1.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
yaml = ["PyYAML"]
jinja2 = ["Jinja2"]
all = ["PyYAML", "Jinja2"]


[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_decorators = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_untyped_calls = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
local_partial_types = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
exclude = "tests"

[tool.doc8]
ignore-path = "doc/build"
max-line-length = 100
sphinx = true

[tool.isort]
profile = "black"

[tool.pylint]
output-format = "colorized"
max-line-length = 88 # PEP 8
max-args = 7

[tool.pylint.'MESSAGES CONTROL']
disable = "R0903, R0801"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "render_static.tests.settings"
python_files = [
  "tests.py",
  "yaml_tests.py",
  "jinja2_tests.py",
  "js_tests.py",
  "examples_tests.py",
  "traverse_tests.py"
  # "web_tests.py"
]
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__"
addopts = [
    "--strict-markers",
    "--cov=render_static",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
]

[tool.coverage.run]
omit = [
  "render_static/tests/app1/static_jinja2/batch_test/**/*",
  "render_static/tests/app1/static_jinja2/**/*",
  "render_static/tests/app2/static_jinja2/**/*"
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
  render_static/tests/resources/bad_code\.py
'''
