[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "django-render-static"
version = "3.2.1"
description = "Use Django's template engine to render static files at deployment or package time. Includes transpilers for extending Django's url reversal and enums to JavaScript."
requires-python = ">=3.9,<4.0"
authors = [
  {name = "Brian Kohan", email = "bckohan@gmail.com"},
]
license = "MIT"
license-files = [ "LICENSE" ]
readme = "README.md"
repository = "https://github.com/bckohan/django-render-static"
homepage = "https://django-render-static.readthedocs.io"
keywords = ["django", "static", "templates", "javascript", "url", "reverse", "defines", "transpiler", "transpile", "enum"]
dependencies = [
    "Django>=3.2,<6.0",
    "django-typer>=3.0,<3.1"
]
classifiers = [
    "Environment :: Console",
    "Framework :: Django",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry]
packages = [{ include = "render_static" }]

[project.optional-dependencies]
PyYAML = ["PyYAML>=5.1,<7.0"]
Jinja2 = ["Jinja2>=2.9,<4.0"]

[project.urls]
"Homepage" = "https://django-render-static.readthedocs.io"
"Documentation" = "https://django-render-static.readthedocs.io"
"Repository" = "https://github.com/bckohan/django-render-static"
"Issues" = "https://github.com/bckohan/django-render-static/issues"
"Changelog" = "https://django-render-static.readthedocs.io/en/latest/changelog.html"
"Code_of_Conduct" = "https://github.com/bckohan/django-render-static/blob/main/CODE_OF_CONDUCT.md"


[tool.poetry.group.dev.dependencies]
django-enum = "^2.0.0"
enum-properties = "^2.0.0"
ipdb = "^0.13.13"
ipython = [
    { version = "^8.20.0", markers = "python_version >= '3.10'" },
    { version = "^8.18.1", markers = "python_version >= '3.9'" }
]
pytest = "^8.0"
pytest-django = "^4.8.0"
pytest-cov = "^6.0.0"
mypy = "^1.14"
deepdiff = "^8.2.0"
readme-renderer = {extras = ["md"], version = ">=43.0"}
types-PyYAML = ">=6.0"
importlib-metadata = ">=7.0.0"
selenium = "^4.28.0"
python-dateutil = "^2.9"
aiohttp = "^3.11"
pyright = {extras = ["nodejs"], version = "^1.1.357"}
ruff = "^0.9"
django-stubs = {extras = ["compatible-mypy"], version = ">=5.0.2"}
pre-commit = "^4.0.1"
webdriver-manager = "^4.0.2"


[tool.poetry.group.docs]
optional = true


[tool.poetry.group.docs.dependencies]
furo = "2024.8.6"
sphinx-tabs = "^3.4.5"
readme-renderer = { extras = ["md"], version = "44"}
sphinxcontrib-typer = {extras = ["html", "pdf", "png"], version = "^0.5.1", markers="python_version >= '3.9'"}
doc8 = "^1.1.1"
Sphinx = [
    { version = "^8.0", markers = "python_version >= '3.10'" },
    { version = "^7.4", markers = "python_version < '3.10'" }
]
docutils = "^0.21"
sphinx-autobuild = "2024.10.3"


[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_decorators = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_untyped_calls = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
local_partial_types = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true


[tool.doc8]
ignore-path = "doc/build"
max-line-length = 100
sphinx = true



[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__"
addopts = [
    "--strict-markers",
    "--cov=render_static",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
]

[tool.coverage.run]
branch = true
omit = [
  "tests/app1/static_jinja2/batch_test/**/*",
  "tests/app1/static_jinja2/**/*",
  "tests/app2/static_jinja2/**/*"
]
source = ["render_static"]
relative_files = true
command_line = "-m pytest --cov=render_static"

[tool.coverage.paths]
source = [
    "render_static"
]

[tool.ruff]
line-length = 88
exclude = [
    "doc",
    "dist",
    "examples",
    "tests/resources/bad_code.py"
]

[tool.ruff.lint]
exclude = [
    "tests/**/*",
]

[tool.pyright]
exclude = ["tests/**/*"]
include = [
    "render_static"
]
